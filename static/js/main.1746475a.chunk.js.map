{"version":3,"sources":["components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/App/App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","FeedbackOptions","options","onLeaveFeedback","className","style","buttonsWrapper","Object","keys","map","elem","type","onClick","name","key","App","state","handleButton","event","target","setState","prevState","values","reduce","acc","Math","round","this","PageContent","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uNAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKD,GACJC,ICIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICgCCC,EAhCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,oCACGD,IAAuB,EACtB,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,KACX,iDAAuBC,IAAvB,OAGF,kBAAC,EAAD,CAAcN,QAAQ,wB,gBCWfO,EA7BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,yBAAKC,UAAWC,IAAMC,gBACnBC,OAAOC,KAAKN,GAASO,KAAI,SAAAC,GACxB,OACE,4BACEC,KAAK,SACLC,QAAST,EACTU,KAAMH,EACNN,UAAS,UAAKM,EAAL,QACTI,IAAKJ,GAEJA,Q,gBCoCEK,E,2MA7CbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,aAAe,SAAAC,GAAU,IACfL,EAASK,EAAMC,OAAfN,KACR,EAAKO,UAAS,SAAAC,GAAS,sBACpBR,EAAOQ,EAAUR,GAAQ,O,EAI9Bd,mBAAqB,kBACnBQ,OAAOe,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKd,GAAN,OAAec,EAAMd,IAAM,I,EAE9DV,gCAAkC,kBAChCyB,KAAKC,MAAO,EAAKV,MAAMpB,KAAO,EAAKG,qBAAwB,M,wEAEnD,IAAD,EACwB4B,KAAKX,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,yBAAKM,UAAWC,IAAMuB,aACpB,kBAAC,EAAD,CAASrC,MAAM,yBACb,kBAAC,EAAD,CACEW,QAAS,CAAEN,OAAMC,UAASC,OAC1BK,gBAAiBwB,KAAKV,gBAG1B,kBAAC,EAAD,CAAS1B,MAAM,cACb,kBAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoB4B,KAAK5B,mBACzBC,gCACE2B,KAAK3B,wC,GArCD6B,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,eAAiB,0C,kBCAnCD,EAAOC,QAAU,CAAC,YAAc,4B","file":"static/js/main.1746475a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h3>{message}</h3>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      {countTotalFeedback() > 0 ? (\n        <>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {countTotalFeedback()}</p>\n          <p>Positive feedback: {countPositiveFeedbackPercentage()} %</p>\n        </>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.func.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.buttonsWrapper}>\n      {Object.keys(options).map(elem => {\n        return (\n          <button\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            name={elem}\n            className={`${elem}-btn`}\n            key={elem}\n          >\n            {elem}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport style from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButton = event => {\n    const { name } = event.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, elem) => acc + elem, 0);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={style.PageContent}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={{ good, neutral, bad }}\n            onLeaveFeedback={this.handleButton}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={this.countTotalFeedback}\n            countPositiveFeedbackPercentage={\n              this.countPositiveFeedbackPercentage\n            }\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"FeedbackOptions_buttonsWrapper__2wJTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContent\":\"App_PageContent__1b-me\"};"],"sourceRoot":""}