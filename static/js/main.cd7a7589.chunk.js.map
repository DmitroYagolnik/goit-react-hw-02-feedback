{"version":3,"sources":["components/Feedback/Feedback.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js","components/Feedback/Feedback.module.css","components/App/App.module.css"],"names":["Feedback","handleButton","className","style","buttonsWrapper","name","type","onClick","Notification","message","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","App","state","event","target","setState","prevState","Object","values","reduce","acc","elem","Math","round","this","PageContent","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uOA0CeA,EAtCE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClB,OACE,oCACE,qDACA,yBAAKC,UAAWC,IAAMC,gBACpB,4BACEF,UAAU,OACVG,KAAK,OACLC,KAAK,SACLC,QAASN,GAJX,QAQA,4BACEC,UAAU,cACVG,KAAK,UACLC,KAAK,SACLC,QAASN,GAJX,WAQA,4BACEC,UAAU,UACVG,KAAK,MACLC,KAAK,SACLC,QAASN,GAJX,UCdOO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICiCCC,EAjCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,oCACE,0CACCD,IAAuB,EACtB,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,KACX,iDAAuBC,IAAvB,OAGF,kBAAC,EAAD,CAAcN,QAAQ,wB,gBCqBfO,E,2MAtCbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,aAAe,SAAAiB,GAAU,IACfb,EAASa,EAAMC,OAAfd,KACR,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,EAI9BS,mBAAqB,WACnB,OAAOQ,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGrEX,gCAAkC,WAChC,OAAOY,KAAKC,MAAO,EAAKX,MAAMN,KAAO,EAAKG,qBAAwB,M,wEAG1D,IAAD,EACwBe,KAAKZ,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,yBAAKX,UAAWC,IAAM2B,aACpB,kBAAC,EAAD,CAAU7B,aAAc4B,KAAK5B,eAC7B,kBAAC,EAAD,CACEU,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBe,KAAKf,mBACzBC,gCAAiCc,KAAKd,uC,GAhC9BgB,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,eAAiB,mC,kBCAnCD,EAAOC,QAAU,CAAC,YAAc,4B","file":"static/js/main.cd7a7589.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Feedback.module.css';\n\nconst Feedback = ({ handleButton }) => {\n  return (\n    <>\n      <h2>Please leave feedback</h2>\n      <div className={style.buttonsWrapper}>\n        <button\n          className=\"good\"\n          name=\"good\"\n          type=\"button\"\n          onClick={handleButton}\n        >\n          Good\n        </button>\n        <button\n          className=\"neutral-btn\"\n          name=\"neutral\"\n          type=\"button\"\n          onClick={handleButton}\n        >\n          Neutral\n        </button>\n        <button\n          className=\"bad-btn\"\n          name=\"bad\"\n          type=\"button\"\n          onClick={handleButton}\n        >\n          Bad\n        </button>\n      </div>\n    </>\n  );\n};\n\nFeedback.propTypes = {\n  handleButton: PropTypes.func.isRequired,\n};\n\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h3>{message}</h3>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      <h2>Statistics</h2>\n      {countTotalFeedback() > 0 ? (\n        <>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {countTotalFeedback()}</p>\n          <p>Positive feedback: {countPositiveFeedbackPercentage()} %</p>\n        </>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.func.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Feedback from '../Feedback/Feedback';\nimport Statistics from '../Statistics/Statistics';\nimport style from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButton = event => {\n    const { name } = event.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, elem) => acc + elem, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={style.PageContent}>\n        <Feedback handleButton={this.handleButton} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          countTotalFeedback={this.countTotalFeedback}\n          countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"Feedback_buttonsWrapper__1V7Nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContent\":\"App_PageContent__1b-me\"};"],"sourceRoot":""}